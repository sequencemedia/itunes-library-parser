"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.toJSON=toJSON;exports.toJS=toJS;exports.toES=toES;exports.default=exports.parse=void 0;var _child_process=require("child_process");var _path=_interopRequireDefault(require("path"));var _sacredFs=require("sacred-fs");var _debug=_interopRequireDefault(require("debug"));var _transform=require("../../../transform");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const error=(0,_debug.default)('itunes-library-parser:to-json:error');const cwd=_path.default.resolve(__dirname,'../../../../..');const xsl=_path.default.resolve(cwd,'src/xsl/library/tracks/to-json.xsl');const DESTINATION=_path.default.resolve(cwd,'.itunes-library/playlists.json');const parse=(jar,xml,destination=DESTINATION)=>new Promise((resolve,reject)=>{(0,_child_process.exec)(`java -jar "${_path.default.resolve(jar)}" -s:"${_path.default.resolve(xml)}" -xsl:"${xsl}" -o:"${destination}"`,{cwd},e=>!e?resolve():reject(e));});exports.parse=parse;const execute=(jar,xml)=>parse(jar,xml,DESTINATION).then(()=>(0,_sacredFs.readFile)(DESTINATION));async function toJSON(jar,xml){try{const fileData=await execute(jar,xml);return fileData.toString('utf8');}catch({message}){error(message);throw new Error('Failed to process XML to JSON');}}async function toJS(jar,xml){try{return JSON.parse(await toJSON(jar,xml));}catch({message}){error(message);throw new Error('Failed to process XML to JS');}}async function toES(jar,xml){try{return(0,_transform.transform)(JSON.parse(await toJSON(jar,xml)));}catch({message}){error(message);throw new Error('Failed to process XML to ES');}}var _default={toJSON,toJS,toES};exports.default=_default;